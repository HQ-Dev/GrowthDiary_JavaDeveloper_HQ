第十章 面向对象设计原则

    关于封装
对于对这个城堡游戏在消除了重复的代码之后改进之后，还要作进一步的代码改进；
	其中有一个改进就是：
	
	         增加可扩展性
 · 可以运行的代码 != 良好的代码
 · 对代码做维护的时候最能看出代码的质量
 · 如果想要增加一个方向，如down或者up
 
             用封装来降低耦合
 · Room类和Game类都有大量的代码和出口相关
 · 尤其是Game类中大量使用了Room类的成员变量
 · 类和类之间的关系称作耦合
 · 耦合越低越好，保持距离是形成良好代码的关键