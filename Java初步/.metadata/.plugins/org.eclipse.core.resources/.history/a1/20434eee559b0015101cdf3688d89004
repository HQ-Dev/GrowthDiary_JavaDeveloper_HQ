import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
// 初始化
//		Scanner in = new Scanner(System.in);
//// 读入投币金额
//		System.out.print("请投币");
//		int amount = in.nextInt();
//// 打印车票
//		System.out.println("**************");
//		System.out.println("Java城际铁路专线");
//		System.out.println("*  无指定座位票  *");
//		System.out.println("  票价：10元  ");
//		System.out.println("**************");
//// 计算并打印找零
//		System.out.println("找零：" + (amount - 10));
		
		
		
		// 2-1.2 关系运算
		// 优先级
		// 所有的关系运算符的优先级比算数运算的低，但是比赋值运算的高。
		// 比较浮点数和整数的大小，最好如下面所示:
//		int a = 1;
//		double b = 0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1;
//		System.out.println(Math.abs(a-b) < 1e-6);    // （a-b的绝对值是否小于一个很小的数）
		
		
		
		// 2—2.1 做判断
		// 如果投入的钱是五元，它还是会出票，所以我们要让程序做判断，如果投入的钱不够票面金额，则不能出票。
		Scanner in = new Scanner(System.in);
		System.out.println("请投币：");
		int amount  = in.nextInt();
		if (amount >= 10) {
			System.out.println("**************");
			System.out.println("Java城际铁路专线");
			System.out.println("*  无指定座位票  *");
			System.out.println("  票价：10元  ");
			System.out.println("**************");
// 计算并打印找零
			System.out.println("找零：" + (amount - 10));
		} else {
			System.out.println("您投入的钱不够支付票价，您还需要投入：" + (10 - amount) + "元");
		}
	}

}
