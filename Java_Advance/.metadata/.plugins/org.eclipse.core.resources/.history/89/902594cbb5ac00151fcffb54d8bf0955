第九章笔记
9.3多态变量
·类定义了类型
·子类定义了子类型
·子类的对象可以被当作父类的对象来使用
 ·子类的对象可以赋值给父类的变量；
 ·传递给需要父类对象的函数；
 ·放进存放父类对象的容器；
 
·Java的对象变量是多态的，它们能保存不止一种类型的变量；（一种声明类型，一种表现为动态类型）
·它们可以保存是声明类型的对象，也可以保存声明类型的子类型的变量；
·当把子类的对象赋给父类的变量的时候， 就发生了一种情况，叫做向上造型。
 
 9.3 向上造型
 ·子类对象可以赋值给父类的变量；
   ·注意！Java种不存在对象对对象的赋值！
 ·父类的对象不能赋值给子类的变量！
    Vechicle v;
    Car c = new Car();
    v = c;  // 可以
    c = v;  // 编译错误
 
 ·可以用造型：
    c = (Car) v;
    (只有当v这个变量实际管理的是Car才行)
    ·关于造型
 ·用括号围起类型放在值的前面
 ·对象本身并没有发生任何改变
   ·所以不是“类型转换”
 ·运行时有机制来检查这样的转化是否合理
   ·ClassCastException
   
     ·向上造型
  ·拿一个子类的对象，当作父类的对象来用；
  ·向上造型时默认的，不需要运算符
  ·向上造型总是安全的
  
  
  9.4  多态
 ·当通过对象变量调用函数的时候，调用哪个函数这件事情叫做绑定；
   ·静态绑定：根据变量的声明类型来绑定；
   ·动态绑定：根据变量的动态类型来绑定；（程序运行的时候才知道的是动态绑定）
 ·在成员函数中调用其他成员函数也是通过this这个变量来调用的。（其实this是一个动态变量）
 
         覆盖override
  ·子类和父类种存在名称和参数表完全相同的函数，这一对函数构成覆盖关系；
  ·通过父类的变量调用存在覆盖关系的函数时，会调用变量当时所管理的对象所属的类的函数
 